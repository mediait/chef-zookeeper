#!/usr/bin/env ruby

require 'rubygems'
gem 'aws-sdk'
require 'aws'
require 'json'

server_ips = [<%= node['zookeeper']['eip_list'].map{|ip| "\"#{ip}\""}.join(',') %><%# %>] 

public_ip =       `curl -s http://169.254.169.254/latest/meta-data/public-ipv4`.chomp

exit 0 if server_ips.include?(public_ip)

instance_name =   `curl -s http://169.254.169.254/latest/meta-data/instance-id`.chomp
iam_role =        `curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/`.chomp
data = JSON.parse(`curl -s http://169.254.169.254/latest/meta-data/iam/security-credentials/#{iam_role}`.chomp)

aws_access_key = data["AccessKeyId"]
aws_secret_key = data["SecretAccessKey"]
aws_token = data["Token"]
  
AWS.config({:access_key_id => aws_access_key,
          :secret_access_key => aws_secret_key,
          :session_token => aws_token,
          :ssl_ca_path => '/etc/ssl/certs',
          :ssl_ca_file => '/etc/ssl/certs/ca.pem'})

ec2 = AWS::EC2.new

begin
  tries ||= 2
  for ip_str in server_ips
    eip = ec2.elastic_ips[ip_str]
    if !eip.associated?
      eip.associate :instance => instance_name
      `echo #{server_ips.index(ip_str) + 1} | tee <%= node['zookeeper']['config_dir'] %>/myid`
      break
    end
  end
rescue AWS::Errors => e
  retry unless (tries -= 1).zero?
  raise
end

sleep 5 # give associated address a moment to apply
